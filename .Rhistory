,search_criteria = list(newXMLNode("Status", 'A'),newXMLNode("Keyword", 'cl=%'))
)
makeList <- oas_list(oasAuth(), request_type = 'Keyword',search_criteria_attributes = c(pageSize="30000")
,search_criteria = list(newXMLNode("Status", 'A'),newXMLNode("Keyword", 'make=%'))
)
categoryList <- oas_list(oasAuth(), request_type = 'Keyword',search_criteria_attributes = c(pageSize="30000")
,search_criteria = list(newXMLNode("Status", 'A'),newXMLNode("Keyword", 'category=%'))
)
typeList <- oas_list(oasAuth(), request_type = 'Keyword',search_criteria_attributes = c(pageSize="30000")
,search_criteria = list(newXMLNode("Status", 'A'),newXMLNode("Keyword", 'type=%'))
)
typeList <- typeList %>% filter(grepl('^type.+',text,ignore.case = TRUE))
# Section_list <- oas_list(oasAuth(), request_type = 'Section',search_criteria_attributes = c(pageSize="30000"))
sections <- c('YW-Search','YW-Details','BTOL-Details','BTOL-Search','boats-Details','boats-Search')
man_stats <- oas_search_inventory(credentials = oasAuth(),
report_type='KeywordStatistics',
report_name = 'statistics by keyword & section',
keywords = paste(manList$text,collapse=", "),
max_row="30000",
section_id=sections
# start_date = as.character(Sys.Date() -31),
# end_date = as.character(Sys.Date() -1)
)
man_stats$type <- substr(man_stats$Keyword,5,nchar(man_stats$Keyword))
write.csv(man_stats,'man_stats.csv',row.names = FALSE)
class_stats <- oas_search_inventory(credentials = oasAuth(),
report_type='KeywordStatistics',
report_name = 'statistics by keyword & section',
keywords = paste(classList$text,collapse=", "),
max_row="30000",
section_id=sections
# start_date = as.character(Sys.Date() -31),
# end_date = as.character(Sys.Date() -1)
)
class_stats$type <- substr(class_stats$Keyword,4,nchar(class_stats$Keyword))
write.csv(class_stats,'class_stats.csv',row.names = FALSE)
make_stats <- oas_search_inventory(credentials = oasAuth(),
report_type='KeywordStatistics',
report_name = 'statistics by keyword & section',
keywords = paste(makeList$text,collapse=", "),
max_row="30000",
section_id=sections
# start_date = as.character(Sys.Date() -31),
# end_date = as.character(Sys.Date() -1)
)
make_stats$type <- substr(make_stats$Keyword,6,nchar(make_stats$Keyword))
write.csv(make_stats,'make_stats.csv',row.names = FALSE)
type_stats <- oas_search_inventory(credentials = oasAuth(),
report_type='KeywordStatistics',
report_name = 'statistics by keyword & section',
keywords = paste(typeList$text,collapse=", "),
max_row="30000",
section_id=sections
# start_date = as.character(Sys.Date() -31),
# end_date = as.character(Sys.Date() -1)
)
type_stats$type <- substr(type_stats$Keyword,6,nchar(type_stats$Keyword))
write.csv(type_stats,'type_stats.csv',row.names = FALSE)
class_stats <- read.csv('class_stats.csv')
make_stats <- read.csv('make_stats.csv')
man_stats <- read.csv('man_stats.csv')
type_stats <- read.csv('type_stats.csv')
brandClassFactor <- function(brand_string, class_string, delim = ",", webSection){
regex_brand <- stringToRegex(brand_string,delim)
man_filt <- man_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
man_unfilt <- man_stats %>% filter(Section == webSection )
make_filt <- make_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
make_unfilt <- make_stats %>% filter(Section == webSection )
brand_factor <- (
(sum(as.numeric(man_filt$AverageperDayImpressions))+sum(as.numeric(make_filt$AverageperDayImpressions)))
/(sum(as.numeric(man_unfilt$AverageperDayImpressions))+sum(as.numeric(make_unfilt$AverageperDayImpressions)))
)
regex_class <- stringToRegex(class_string, delim)
class_filt <- class_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
class_unfilt <- class_stats %>% filter(Section == webSection )
type_filt <- type_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
type_unfilt <- type_stats %>% filter(Section == webSection )
class_factor <- (
(sum(as.numeric(class_filt$AverageperDayImpressions))+sum(as.numeric(type_filt$AverageperDayImpressions)))
/(sum(as.numeric(class_unfilt$AverageperDayImpressions))+sum(as.numeric(type_unfilt$AverageperDayImpressions)))
)
datas <- cbind.data.frame(brand_factor = brand_factor, class_factor = class_factor, minFactor = max(brand_factor,class_factor), scaledFactor = max(brand_factor,class_factor) + min(brand_factor,class_factor)*.35)
return(datas)
}
brand_string <- "Sunseeker, Princess, Azimut, Ferretti, Prestige, Monte Carlo, Westport"
class_string <- "powermotoryacht, Flybridge"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
stringToRegex <- function (string,delim) {
string <- tolower(trim(unlist(strsplit(string,delim))))
string <- paste0('^',string,'$')
string <- paste(string, collapse = "|")
return (string)
}
brand_string <- "Sunseeker, Princess, Azimut, Ferretti, Prestige, Monte Carlo, Westport"
class_string <- "powermotoryacht, Flybridge"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
View(class_stats)
brand_string <- " Beneteau, Jeanneau, Catalina, Dufour, Bavaria, Hunter, Hanse, X-Yachts, Moody, Elan, Grand Soleil, Dehler"
class_string <- "sailcruiserracer, sailcruiserracer, sailsloop"
brandClassFactor(brand_string, class_string, webSection = "YW-Search")
brandClassFactor(brand_string, class_string, webSection = "YW-Details")
my_credentials <- oasAuth()
start_date <- as.character(Sys.Date()-8)
end_date <- as.character(Sys.Date()-1)
#
#
#
# Geo <- oas_report(credentials = my_credentials,
#                   report_type = 'site delivery',
#                   report_name = 'dma delivery information',
#                   id = 'www.boattrader.com',
#                   start_date=start_date,
#                   end_date=end_date)
#
# # tempGeo <- oas_report(credentials = my_credentials,
# #                       report_type = 'site delivery',
# #                       report_name = 'state/province delivery information',
# #                       id = 'www.yachtworld.com',
# #                       start_date=start_date,
# #                       end_date=end_date)
campsBySite <- OAS_listCampPerSites(start_date = start_date, end_date = end_date)
campsBySite <- campsBySite %>% filter(salesgroup %in% c('DDM','known_default'))
del <- OAS_campDelByGeoPagePos( campList = campsBySite$Campaign, salesgroup = campsBySite$salesgroup, advertiser = campsBySite$Advertiser,
geo = 'dma delivery information', start_date = start_date, end_date = end_date)
# del_state <- OAS_campDelByGeoPagePos( campList = campsBySite$Campaign, salesgroup = campsBySite$salesgroup, advertiser = campsBySite$Advertiser)
pagePosDel <- del[[1]]
geoDel <- del[[2]]
pagePosDel$section <- OAS_catPageSection(pagePosDel$Page)
pagePosDel$business <- OAS_websiteCat(pagePosDel$Page)
pagePosDel$fullDomain <- OAS_catFullDomainName(pagePosDel$Page)
geoDel <- OAS_catGeo(geoDel)
DelByPagePosSectionGeo <- OAS_joinGeo_PagePos(pagePosDel,geoDel)
source('~/R files/R_Functions/AuthFunctions.R')
my_credentials <- oasAuth()
start_date <- as.character(Sys.Date()-8)
end_date <- as.character(Sys.Date()-1)
#
#
#
# Geo <- oas_report(credentials = my_credentials,
#                   report_type = 'site delivery',
#                   report_name = 'dma delivery information',
#                   id = 'www.boattrader.com',
#                   start_date=start_date,
#                   end_date=end_date)
#
# # tempGeo <- oas_report(credentials = my_credentials,
# #                       report_type = 'site delivery',
# #                       report_name = 'state/province delivery information',
# #                       id = 'www.yachtworld.com',
# #                       start_date=start_date,
# #                       end_date=end_date)
campsBySite <- OAS_listCampPerSites(start_date = start_date, end_date = end_date)
campsBySite <- campsBySite %>% filter(salesgroup %in% c('DDM','known_default'))
del <- OAS_campDelByGeoPagePos( campList = campsBySite$Campaign, salesgroup = campsBySite$salesgroup, advertiser = campsBySite$Advertiser,
geo = 'dma delivery information', start_date = start_date, end_date = end_date)
# del_state <- OAS_campDelByGeoPagePos( campList = campsBySite$Campaign, salesgroup = campsBySite$salesgroup, advertiser = campsBySite$Advertiser)
pagePosDel <- del[[1]]
geoDel <- del[[2]]
pagePosDel$section <- OAS_catPageSection(pagePosDel$Page)
pagePosDel$business <- OAS_websiteCat(pagePosDel$Page)
pagePosDel$fullDomain <- OAS_catFullDomainName(pagePosDel$Page)
geoDel <- OAS_catGeo(geoDel)
DelByPagePosSectionGeo <- OAS_joinGeo_PagePos(pagePosDel,geoDel)
View(DelByPagePosSectionGeo)
geo <- c('Grand Rapids - Kalamazoo - Battle Creek','Lansing')
# geo <- c('Biloxi - Gulfport','Birmingham (Anniston and Tuscaloosa)','Columbus, OH','Dothan','Greenwood - Greenville','Hattiesburg - Laurel','Huntsville - Decatur (Florence)','Jackson, MS','Meridian','Mobile - Pensacola (Fort Walton Beach)','Montgomery (Selma)','Panama City','Tallahassee - Thomasville')
delivery <- DelByPagePosSectionGeo
class_stats <- read.csv('class_stats.csv')
make_stats <- read.csv('make_stats.csv')
man_stats <- read.csv('man_stats.csv')
type_stats <- read.csv('type_stats.csv')
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
stringToRegex <- function (string,delim) {
string <- tolower(trim(unlist(strsplit(string,delim))))
string <- paste0('^',string,'$')
string <- paste(string, collapse = "|")
return (string)
}
brandClassFactor <- function(brand_string, class_string, delim = ",", webSection){
regex_brand <- stringToRegex(brand_string,delim)
man_filt <- man_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
man_unfilt <- man_stats %>% filter(Section == webSection )
make_filt <- make_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
make_unfilt <- make_stats %>% filter(Section == webSection )
brand_factor <- (
(sum(as.numeric(man_filt$AverageperDayImpressions))+sum(as.numeric(make_filt$AverageperDayImpressions)))
/(sum(as.numeric(man_unfilt$AverageperDayImpressions))+sum(as.numeric(make_unfilt$AverageperDayImpressions)))
)
regex_class <- stringToRegex(class_string, delim)
class_filt <- class_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
class_unfilt <- class_stats %>% filter(Section == webSection )
type_filt <- type_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
type_unfilt <- type_stats %>% filter(Section == webSection )
class_factor <- (
(sum(as.numeric(class_filt$AverageperDayImpressions))+sum(as.numeric(type_filt$AverageperDayImpressions)))
/(sum(as.numeric(class_unfilt$AverageperDayImpressions))+sum(as.numeric(type_unfilt$AverageperDayImpressions)))
)
datas <- cbind.data.frame(brand_factor = brand_factor, class_factor = class_factor, minFactor = max(brand_factor,class_factor), scaledFactor = max(brand_factor,class_factor) + min(brand_factor,class_factor)*.35)
return(datas)
}
View(make_stats)
View(type_stats)
brand_string <- "Baystealth, Blackjack, Blazerbay, Bluefin, Bluewave, Boston Whaler, Capehorn, Carolina Skiff, Century, Cobia, Contender, Deep Impact, Edgewater, Epic, Everglades, Fishmaster, Fountain, Glasstream, Grady White, Hydra Sports, Intrepid, Invincible, Island Runner, Jupiter, Key Largo, Keywest, Mako, Mckeecraft, Midnight Express, NauticStar, Palmetto, Parker, Pathfinder, Pioneer, Pursuit, Regulator, Robalo, Sailfish, Scout, Seacraft, Seafox, Seahunter, Seaswirl, Seavee, Skeeter, Southport, Sportsman, Tidewater, Triton, Trophy, Venture, Wellcraft, Yellowfin"
class_string <- "saltwaterfishing, Centerconsole"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "Alumacraft, Basscat, Bullet, Crestliner, G3, Lowe, Lund, Nitro, Phoenix, Polarkraft, Princecraft , Ranger, Skeeter, Smoker Craft, Sterling, Stratos, Tracker, Triton, War Eagle, Xpress"
class_string <- "freshwaterfishing, FreshwaterFishingBoats"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Baycraft, Baystealth, Bluewave, Boston Whaler, Bulls Bay, Carolina Skiff, Century, Champion, Clearwater, Everglades, Kencraft, Keywest, NauticStar, Pathfinder, Robalo, Scout, Seaborn, Seachaser, Seafox, Seahunt, Seahunter, Seapro, Shearwater, Skeeter, Sportsman, Sundance, Tidewater, Triton, Blazerbay
"
class_string <- "bayboats, skiff, jonboats"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Baja, Bayliner, Bryant, Chaparral, Chris Craft, Cobalt, Crownline, Ebbtide, Formula, Fourwinns, Glastron, Hurricane, Larson, Malibu, Mariah, Monterey, Regal, Rinker, Sea Ray, Southwind, Stingray, Yamaha
"
class_string <- "Bowrider, RUNABOUTS, SKIANDFISH"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Axis, Calabria, Centurion, Correct Craft, Epic, Gekko, Malibu, Mastercraft, MB sports, Moomba, Nautiue, Reinell, Sanger, Ski Nautique, Supra, Supreme , Tahoe, Tige, Scarab, Yamaha
"
class_string <- "SkiWakeboardBoats, JETBOATS"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Aloha, Aquapatio, Aurora, Avalon, Bennington, Bentley, Crest, Cypress cay, Escape, Godfrey, Harris flote, JC, Larson, Manitou, Partikraft, Playcraft, Premier, Princecraft, Qwest, Sanpan, Southbay, Southwind, Starcraft, suncatcher, sunchaser, suncruiser, sundancer, suntracker, sweetwater, sylvan, tahoe, Xcursion
"
class_string <- "PONTOONBOATS, PontoonDeckBoats, deckboats"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Azimut, Bavaria, Carver, Chris-craft, Cobalt, Fairline, Formula, Jeanneau, Prestige, Regal, Riva, Riviera, Sealine, Sea Ray, Sessa, Silverton, Tiara, Uniesse, Windy, Marquis
"
class_string <- "cruisers, motoryachts"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
brand_string <- "
Suzuki, Kawasaki, Sea Doo, Yamaha
"
class_string <- "pwc"
brandClassFactor(brand_string, class_string, webSection = "BTOL-Details")
brandClassFactor(brand_string, class_string, webSection = "BTOL-Search")
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
geo <- c('Detroit','Flint - Saginaw - Bay City')
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
class_stats <- read.csv('class_stats.csv')
make_stats <- read.csv('make_stats.csv')
man_stats <- read.csv('man_stats.csv')
type_stats <- read.csv('type_stats.csv')
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
stringToRegex <- function (string,delim) {
string <- tolower(trim(unlist(strsplit(string,delim))))
string <- paste0('^',string,'$')
string <- paste(string, collapse = "|")
return (string)
}
brandClassFactor <- function(brand_string, class_string, delim = ",", webSection){
regex_brand <- stringToRegex(brand_string,delim)
man_filt <- man_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
man_unfilt <- man_stats %>% filter(Section == webSection )
make_filt <- make_stats %>% filter(grepl(regex_brand,tolower(type)),Section == webSection)
make_unfilt <- make_stats %>% filter(Section == webSection )
brand_factor <- (
(sum(as.numeric(man_filt$AverageperDayImpressions))+sum(as.numeric(make_filt$AverageperDayImpressions)))
/(sum(as.numeric(man_unfilt$AverageperDayImpressions))+sum(as.numeric(make_unfilt$AverageperDayImpressions)))
)
regex_class <- stringToRegex(class_string, delim)
class_filt <- class_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
class_unfilt <- class_stats %>% filter(Section == webSection )
type_filt <- type_stats %>% filter(grepl(regex_class,tolower(type)),Section == webSection )
type_unfilt <- type_stats %>% filter(Section == webSection )
class_factor <- (
(sum(as.numeric(class_filt$AverageperDayImpressions))+sum(as.numeric(type_filt$AverageperDayImpressions)))
/(sum(as.numeric(class_unfilt$AverageperDayImpressions))+sum(as.numeric(type_unfilt$AverageperDayImpressions)))
)
datas <- cbind.data.frame(brand_factor = brand_factor, class_factor = class_factor, minFactor = max(brand_factor,class_factor), scaledFactor = max(brand_factor,class_factor) + min(brand_factor,class_factor)*.35)
return(datas)
}
View(class_stats)
brand_string <- "Marlow, Flemming, Nordhavn, Grand Banks, East Bay, Outer Reef, Krogen, Kadey Krogen, Prestige, Sunseeker, Princess, Fairline, Azimut, Prestige"
class_string <- "powertrawler, powermotoryacht"
brandClassFactor(brand_string, class_string, webSection = "YW-Search")
brandClassFactor(brand_string, class_string, webSection = "YW-Details")
View(DelByPagePosSectionGeo)
geo <- c('Austin, TX','Waco - Temple - Bryan','Dallas - Fort Worth','Houston')
# geo <- c('Biloxi - Gulfport','Birmingham (Anniston and Tuscaloosa)','Columbus, OH','Dothan','Greenwood - Greenville','Hattiesburg - Laurel','Huntsville - Decatur (Florence)','Jackson, MS','Meridian','Mobile - Pensacola (Fort Walton Beach)','Montgomery (Selma)','Panama City','Tallahassee - Thomasville')
delivery <- DelByPagePosSectionGeo
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
geo <- c('San Antonio','Odessa - Midland', 'El Paso')
# geo <- c('Biloxi - Gulfport','Birmingham (Anniston and Tuscaloosa)','Columbus, OH','Dothan','Greenwood - Greenville','Hattiesburg - Laurel','Huntsville - Decatur (Florence)','Jackson, MS','Meridian','Mobile - Pensacola (Fort Walton Beach)','Montgomery (Selma)','Panama City','Tallahassee - Thomasville')
delivery <- DelByPagePosSectionGeo
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle1', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Middle2', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'Top', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'DT'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'SR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x21', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x22', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
temp <- delivery %>% filter(Geo %in% geo, business == 'BT',Pos == 'x23', section == 'BR'); sum(temp$EstImpByPosSecGeo)*(365/84)*.85
?oas_read
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='45950-1_14161_MPMercury_YWUS-SR-RT1-300x250')
campaign_details$Response$Campaign$Overview
campaign_details$Response$Campaign$Schedule
campaign_details$Response$Campaign$Content
campaign_details$Response$Campaign$Target
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10')
campaign_details$Response$Campaign$Overview
campaign_details$Response$Campaign$Schedule
campaign_details$Response$Campaign$Exclude
campaign_details$Response$Campaign$Target
campaign_details$Response$Campaign$Schedule
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='45950-1_14161_MPMercury_YWUS-SR-RT1-300x250')
campaign_details$Response$Campaign$Overview
campaign_details$Response$Campaign$Schedule
campaign_details$Response$Campaign$Content
campaign_details$Response$Campaign$Target
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10')
campaign_details
?oas_report
pos_delivery_info <- oas_report(credentials=my_credentials,
report_type='Campaign Delivery',
report_name='page@pos Delivery Information',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10')
View(available_reports)
pos_delivery_info <- oas_report(credentials=my_credentials,
report_type='Campaign Delivery',
report_name='page@position delivery information',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10')
pos_delivery_info <- oas_report(credentials=my_credentials,
report_type='Campaign Delivery',
report_name='page@position delivery information',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10',
start_date = '2016-07-25',
end_date = '2016-08-24'
)
View(pos_delivery_info)
stat_del <- oas_report(credentials=my_credentials,
report_type='Campaign Delivery',
report_name='state/province delivery information',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10',
start_date = '2016-07-25',
end_date = '2016-08-24'
)
View(stat_del)
View(campsBySite)
campsBySite2 <- campsBySite %>% filter(YWimps > 0)
View(campsBySite2)
del <- OAS_campDelByGeoPagePos( campList = campsBySite$Campaign, salesgroup = campsBySite$salesgroup, advertiser = campsBySite$Advertiser,
geo = 'state/province delivery information', start_date = '2016-07-25', end_date = '2016-08-24')
del <- OAS_campDelByGeoPagePos( campList = campsBySite2$Campaign, salesgroup = campsBySite2$salesgroup, advertiser = campsBySite2$Advertiser,
geo = 'state/province delivery information', start_date = '2016-07-25', end_date = '2016-08-24')
pagePosDel <- del[[1]]
geoDel <- del[[2]]
View(geoDel)
geoDel2 <- geoDel %>% filter(Geo %in% c('CA -- Alberta','CA -- British Columbia'))
View(geoDel2)
campsBySite2 <- unique(geoDel2$campaign, geoDel2$Advertiser, geoDel2$salesgroup)
campsBySite2 <- cbind.data.frame(geoDel2$campaign, geoDel2$Advertiser, geoDel2$salesgroup)
campsBySite2 <- unique(campsBySite2)
View(campsBySite2)
del <- OAS_campDelByGeoPagePos( campList = campsBySite2$Campaign, salesgroup = campsBySite2$salesgroup, advertiser = campsBySite2$Advertiser,
geo = 'state/province delivery information', start_date = '2016-07-25', end_date = '2016-08-24')
del <- OAS_campDelByGeoPagePos( campList = campsBySite2$Campaign, salesgroup = campsBySite2$salesgroup, advertiser = campsBySite2$Advertiser,
geo = 'state/province delivery information', start_date = '2016-07-25', end_date = '2016-08-24')
pagePosDel <- del[[1]]
geoDel <- del[[2]]
pagePosDel <- del[[1]]
geoDel <- del[[2]]
campsBySite2$Campaign
View(campsBySite2)
del <- OAS_campDelByGeoPagePos( campList = campsBySite2$`geoDel2$campaign`, salesgroup = campsBySite2$`geoDel2$salesgroup`, advertiser = campsBySite2$`geoDel2$Advertiser`,
geo = 'state/province delivery information', start_date = '2016-07-25', end_date = '2016-08-24')
pagePosDel <- del[[1]]
geoDel <- del[[2]]
View(geoDel)
write.csv(geoDel,'mikaQ1_geo.csv',row.names = FALSE)
write.csv(pagePosDel,'mikaQ1_pagePos.csv',row.names = FALSE)
?oas_read
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='Casale_YW_300x250_x21_Canada')
campaign_details$Response$Campaign$Overview
campaign_details$Response$Campaign$Schedule
campaign_details$Response$Campaign$Target
campaign_details <- oas_read(credentials=oasAuth(),
request_type='Campaign',
id='45949-1_14161_MPMercury_YWUS-SR-RT1-300x250_T10')
campaign_details$Response$Campaign
source('~/Projects/work/seasonal_indices/uploadSItoGoogleSheets.R')
source('~/Projects/work/seasonal_indices/uploadSItoGoogleSheets.R')
pvData
View(pvData)
unique(pvData$date)
df = pvData
df <- df %>% mutate(key = paste0(portal,"-",geo))
df2 <- df %>% group_by(key) %>% summarise(avgPerKey = mean(pageViews))
View(df2)
View(df2)
View(df)
df2 <- df %>% group_by(key) %>% mutate(rank = row_number(date))
View(df2)
df2 <- df %>% group_by(key) %>% arrange(date)
View(df2)
df2 <- df %>% group_by(key) %>% arrange(date, key)
df2 <- df %>% group_by(key) %>% arrange(key,desc(date))
View(df2)
df2 <- df %>% group_by(key) %>% arrange(key,desc(date)) %>% mutate(rank = row_number(date))
View(df2)
df2 <- df %>% group_by(key) %>% mutate(rank = row_number(desc(date)))
View(df2)
df2 <- df %>% group_by(key) %>% filter(row_number(desc(date)) <= 12)
View(df2)
df2 <- df %>% group_by(key) %>% filter(row_number(desc(date)) <= 12) %>% summarise(avgPerKey = mean(pageViews))
View(df2)
df3 <- df %>% inner_join(df2,by="key")
View(df3)
df3 <- df %>% inner_join(df2,by="key") %>% mutate(SI = pageViews/avgPerKey, keyMon = paste0(key,"-",month)) %>%
group_by(key,keyMon) %>% summarise(avgSIKeyMonth = mean(SI))
View(df3)
#this funciton calculates the seasonal indicies
df4 <- df3 %>% group_by(key) %>% summarise(totSIKeyMonth = sum(avgSIKeyMonth))
View(df4)
df5 <- df3 %>% inner_join(df4, by = "key") %>% mutate(NormalizedSI = (avgSIKeyMonth*12)/totSIKeyMonth)
View(df3)
View(df2)
df <- df %>% mutate(key = paste0(portal,"-",geo))
#get average page views per key. Use last12 months to set average
df2 <- df %>% group_by(key) %>% filter(row_number(desc(date)) <= 12) %>% summarise(avgPerKey = mean(pageViews))
#get ratio of PV in key at time t to avg pv per key
df3 <- df %>% inner_join(df2,by="key") %>% mutate(SI = pageViews/avgPerKey, keyMon = paste0(key,"-",month)) %>%
group_by(key,keyMon) %>% summarise(avgSIKeyMonth = mean(SI))
#get totals per keyMon
df4 <- df3 %>% group_by(key) %>% summarise(totSIKeyMonth = sum(avgSIKeyMonth))
#Normalize SI
df5 <- df3 %>% inner_join(df4, by = "key") %>% mutate(NormalizedSI = (avgSIKeyMonth*12)/totSIKeyMonth)
#join with data
df6 <- df %>% mutate(keyMon = paste0(key,"-",month)) %>% distinct(keyMon, portal, geo, month) %>%
inner_join(df5, by = "keyMon") %>% select(portal, geo, month,NormalizedSI) %>% arrange(portal, geo, month)
View(df6)
View(df6)
df6 <- df %>% mutate(keyMon = paste0(key,"-",month)) %>% distinct(keyMon, portal, geo, month) %>%
inner_join(df5, by = "keyMon") %>% select(portal, geo, month,NormalizedSI) %>% arrange(portal, geo, month) %>% mutate(pctTot = NormalizedSI/12)
View(df6)
write.csv(df6,'df6.csv')
seasonal_indices <- seasonalCalc(pvData)
write.csv(seasonal_indices,"seasonal_indices.csv",row.names = FALSE)
gs_upload("seasonal_indices.csv",verbose = FALSE)
